# AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31
# Description: CloudFormation template defines Web ACL resources

# Parameters:
#   Environment:
#     Description: "The environment type"
#     Type: "String"
#     Default: dev
#     AllowedValues:
#       - "dev"
#       - "build"
#       - "staging"
#       - "integration"
#       - "production"

# Conditions:
#   IsProdLikeEnvironment: !Or
#     - !Equals [!Ref Environment, staging]
#     - !Equals [!Ref Environment, integration]
#     - !Equals [!Ref Environment, production]

# #Mappings:
# #  PlatformConfiguration:
# #    dev:
# #      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
# #    build:
# #      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
# #    staging:
# #      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
# #    integration:
# #      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
# #    production:
# #      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython

# Resources:
#   webAcl:
#     Type: 'AWS::WAFv2::WebACL'
#     Properties:
#       Description: Web ACL for Load Balancer
#       Name: !Sub 'platform-security-${Environment}-acl'
#       DefaultAction:
#         Allow: {}
#       Rules:
#         - Name: AWS-CRS
#           Priority: 10
#           Statement:
#             ManagedRuleGroupStatement:
#               VendorName: AWS
#               Name: AWSManagedRulesCommonRuleSet
#               ExcludedRules: []
#           OverrideAction:
#             None: {}
#           VisibilityConfig:
#             SampledRequestsEnabled: true
#             CloudWatchMetricsEnabled: true
#             MetricName: !Sub 'platform-security-${Environment}-aws-crs-metric'

#         - Name: Bad-Inputs
#           Priority: 20
#           Statement:
#             ManagedRuleGroupStatement:
#               VendorName: AWS
#               Name: AWSManagedRulesKnownBadInputsRuleSet
#               ExcludedRules: []
#           OverrideAction:
#             None: {}
#           VisibilityConfig:
#             SampledRequestsEnabled: true
#             CloudWatchMetricsEnabled: true
#             MetricName: !Sub 'platform-security-${Environment}-bad-inputs-metric'

#         - Name: Anonymous-IpList
#           Priority: 30
#           Statement:
#             ManagedRuleGroupStatement:
#               VendorName: AWS
#               Name: AWSManagedRulesAnonymousIpList
#               ExcludedRules: []
#           OverrideAction:
#             None: {}
#           VisibilityConfig:
#             SampledRequestsEnabled: true
#             CloudWatchMetricsEnabled: true
#             MetricName: !Sub 'platform-security-${Environment}-anonymous-iplist-metric'

#         - Name: SQLInject-RuleSet
#           Priority: 40
#           Statement:
#             ManagedRuleGroupStatement:
#               VendorName: AWS
#               Name: AWSManagedRulesSQLiRuleSet
#               ExcludedRules: []
#           OverrideAction:
#             None: {}
#           VisibilityConfig:
#             SampledRequestsEnabled: true
#             CloudWatchMetricsEnabled: true
#             MetricName: !Sub 'platform-security-${Environment}-SQLinjection-ruleset-metric'

#       Scope: REGIONAL
#       Tags:
#         - Key: Name
#           Value: !Sub 'platform-security-${Environment}'
#       VisibilityConfig:
#         SampledRequestsEnabled: true
#         CloudWatchMetricsEnabled: true
#         MetricName: !Sub 'platform-security-${Environment}-metric'

#   cloudwatchLogsGroup:
#     Type: 'AWS::Logs::LogGroup'
#     Properties:
#       LogGroupName: !Sub 'aws-waf-logs-platform-security-${Environment}-cloudWatchLog'
#       RetentionInDays: 180

# #  CSLScloudwatchLogsGroup:
# #    Type: AWS::Logs::SubscriptionFilter
# #    Condition: IsProdLikeEnvironment
# #    Properties:
# #      DestinationArn: !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
# #      FilterPattern: ""
# #      LogGroupName: !Ref cloudwatchLogsGroup

#   webAcllogging:
#     Type: 'AWS::WAFv2::LoggingConfiguration'
#     Properties:
#       ResourceArn: !GetAtt
#         - webAcl
#         - Arn
#       LogDestinationConfigs:
#         - !Sub >-
#           arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:aws-waf-logs-platform-security-${Environment}-cloudWatchLog
#       LoggingFilter:
#         DefaultBehavior: KEEP
#         Filters:
#           - Behavior: KEEP
#             Conditions:
#               - ActionCondition:
#                   Action: BLOCK
#               - ActionCondition:
#                   Action: COUNT
#             Requirement: MEETS_ANY
#       RedactedFields:
#         - SingleHeader:
#             Name: password
#   WafAclSSM:
#     Type: AWS::SSM::Parameter
#     Properties:
#       Description: The ARN of webACL
#       Name: !Sub "/${Environment}/Platform/Security/WafArn"
#       Type: String
#       Value: !GetAtt
#         - webAcl
#         - Arn

# Outputs:
#   WAFv2ACLArn:
#     Description: ARN of WebACL
#     Value: !GetAtt
#       - webAcl
#       - Arn
#     Export:
#       Name: !Sub "${AWS::StackName}-Waf-WebAcl-arn"
#   CloudwatchLogsGroupARN:
#     Description: ARN of CloudWatch Logs Group
#     Value: !GetAtt
#       - cloudwatchLogsGroup
#       - Arn